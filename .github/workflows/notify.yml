name: Karuta Timer Notify üå∏

on:
  schedule:
    - cron: "*/30 * * * *"
  workflow_dispatch:

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: V√©rifie si le timer est actif
        id: check
        run: |
          if [ ! -f timer_state.json ]; then
            echo '{"active": true}' > timer_state.json
          fi
          ACTIVE=$(jq -r '.active' timer_state.json)
          echo "active=$ACTIVE" >> $GITHUB_OUTPUT

      - name: Envoie notif Discord
        if: steps.check.outputs.active == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          WORKFLOW_URL="https://github.com/${{ github.repository }}/actions/workflows/restart.yml"

          curl -H "Content-Type: application/json" \
               -d '{
                 "username": "Karuta Timer üå∏",
                 "avatar_url": "https://media.tenor.com/kC3K9nbhF8IAAAAi/anime-girl.gif",
                 "embeds": [
                   {
                     "title": "üå∏ Karuta Timer",
                     "description": "‚è∞ Il est temps de farmer Senpai ! ‚ú®\nClique sur le bouton ci-dessous pour relancer le timer. üíï",
                     "color": 15548997,
                     "image": {
                       "url": "https://media.tenor.com/kC3K9nbhF8IAAAAi/anime-girl.gif"
                     },
                     "footer": {
                       "text": "Powered by GitHub Actions ‚Ä¢ Made with üíñ by Spincka"
                     }
                   }
                 ],
                 "components": [
                   {
                     "type": 1,
                     "components": [
                       {
                         "type": 2,
                         "style": 5,
                         "label": "üí´ Relancer le timer",
                         "url": "'"$WORKFLOW_URL"'"
                       }
                     ]
                   }
                 ]
               }' $DISCORD_WEBHOOK_URL

          # Pause du timer
          jq '.active = false' timer_state.json > tmp && mv tmp timer_state.json

          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add timer_state.json
          git commit -m "Pause timer apr√®s notif"
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }} HEAD:main
